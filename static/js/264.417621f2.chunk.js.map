{"version":3,"file":"static/js/264.417621f2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/InputItem.styled.jsx","components/ContactForm/InputItem.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactItem.Styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/ModalForm.styled.jsx","redux/contactsSelectors.js","components/Modal/ModalForm.jsx","components/Modal/ModalDelete.styled.jsx","components/Modal/ModalDelete.jsx","components/Modal/Modal.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 50vw;\n  height: fit-content;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  font-size: 24px;\n  color: #010101;\n  object-fit: fill;\n\n  @media screen and (min-width: 768px) {\n    max-width: 29vw;\n    margin: 0;\n  }\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 24px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;","import PropTypes from 'prop-types';\nimport { Input } from './InputItem.styled';\n\nexport const InputItem = ({\n  type = 'text',\n  name,\n  placeholder,\n  pattern,\n  title,\n  onChange,\n  value,\n}) => {\n  return (\n    <Input\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  );\n};\n\nInputItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { MdPersonAddAlt1 } from 'react-icons/md';\nimport { addContact } from './../../redux/contactsOperations';\nimport { Form, Label } from './ContactForm.styled';\nimport { Btn } from '../Btn/Btn';\nimport { InputItem } from './InputItem';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.items);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const includesName = contacts.find(\n      contacts => contacts.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (includesName) {\n      return Notiflix.Notiflix.warning(\n        `${name} is already in contacts`,\n        notifySettings\n      );\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputItem\n          onChange={onInputChange}\n          value={name}\n          name=\"name\"\n          placeholder=\"Enter contact`s name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+([ -'][a-zA-Zа-яА-Я]+)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputItem\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact`s number\"\n          pattern=\"^[+]?[0-9 \\u0028\\u0029\\u002D]*$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </Label>\n      <Btn\n        type=\"submit\"\n        icon={MdPersonAddAlt1}\n        status=\"add\"\n        text=\"Add contact\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  position: relative;\n  padding-left: 0;\n  margin-top: 32px;\n  margin-right: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 15px;    \n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 35vw;\n    width: auto;\n    left: 0;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const PhoneLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n\n  &:hover,\n  &:focus {\n    color: rgba(0, 128, 75, 0.7);\n  }\n\n  & > span {\n    font-weight: normal;\n  }\n`;\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 80px;\n  }\n`;\nexport const ListItem = styled.li`\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  padding: 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.1);\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    padding: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    flex-direction: row;\n    width: 100%;\n  }\n`;\n\nexport const ListItemData = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  font-size: 16px;\n  margin: 16px;\n  border-radius: 12px;\n  padding: 8px 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 32px;\n    font-size: 20px;\n    margin: 0 36px;\n    padding: 12px 18px;\n    max-width: 50vw;\n  }\n`;\n\nexport const DataWrapper = styled.div`\n  & > span {\n    font-weight: normal;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  height: fit-content;\n  width: fit-content;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  opacity: 1;\n`;\n","import styled from 'styled-components';\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 3px;\n\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 150px;\n  }\n`;\n\nexport const ListItem = styled.div`\n  max-width: 70vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    max-width: fit-content;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  padding: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 32px;\n    padding: 32px;\n  }\n`;\n\nexport const ListItemForm = styled.form`\n  font-size: 14px;\n  color: #010101;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  border-radius: 12px;\n  padding: 8px 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 14px;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    flex-direction: row;\n  }\n`;\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 12px;\n  placeholder: grey;\n  padding: 8px 12px;\n  outline-color: yellow;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  margin-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    margin-left: 0;\n  }\n`;\n","export const getContactsItems = state => state.contacts.items;\n","import { useState } from 'react';\nimport { FaUserCheck } from 'react-icons/fa';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport {\n  AvatarWrapper,\n  InputWrapper,\n  Input,\n  Label,\n  ListItem,\n  ListItemForm,\n  ContentWrapper,\n} from './ModalForm.styled';\nimport Avatar from '../../images/girl.gif';\nimport { Btn } from 'components/Btn/Btn';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from '../../redux/contactsOperations';\nimport { getContactsItems } from '../../redux/contactsSelectors';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ModalForm = ({ id, closeModal }) => {\n  const contacts = useSelector(getContactsItems);\n  const currentContact = contacts.find(contact => contact.id === id);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(`${currentContact.name}`);\n  const [number, setNumber] = useState(`${currentContact.number}`);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const includesName = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n\n    if (includesName) {\n      return Notiflix.Notify.warning('No data changed', notifySettings);\n    }\n    dispatch(updateContact({ id, name, number }));\n    closeModal();\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ListItem>\n      <ContentWrapper>\n        <AvatarWrapper>\n          <img src={Avatar} alt=\"avatar\" />\n        </AvatarWrapper>\n        <ListItemForm onSubmit={handleSubmit}>\n          <InputWrapper>\n            <Label>\n              Change name:\n              <Input\n                onChange={onInputChange}\n                value={name}\n                name=\"name\"\n                placeholder=\"Enter contact`s name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+([ -'][a-zA-Zа-яА-Я]+)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n            </Label>\n            <Label>\n              Change phone:\n              <Input\n                onChange={onInputChange}\n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter contact`s number\"\n                pattern=\"^[+]?[0-9 \\u0028\\u0029\\u002D]*$\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n            </Label>\n          </InputWrapper>\n          <Btn\n            icon={FaUserCheck}\n            type=\"submit\"\n            status=\"update\"\n            text=\"Update contact\"\n          />\n        </ListItemForm>\n      </ContentWrapper>\n    </ListItem>\n  );\n};\n\nModalForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 3px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 150px;\n    height: 140px;\n  }\n`;\n\nexport const Hint = styled.p`\n  font-size: 14px;\n  letter-spacing: 0.03em;\n  margin: 0 0 16px 0;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    margin: 0;\n  }\n`;\n\nexport const ListItem = styled.div`\n  max-width: 70vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 16px;\n  padding: 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n\n  @media screen and (min-width: 768px) {\n    max-width: 50vw;\n    padding: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  padding: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 32px;\n    padding: 32px;\n  }\n`;\n\nexport const ConfirmationText = styled.p`\n  margin: 0;\n  font-weight: normal;\n  text-align: center;\n  & > span {\n    font-weight: bold;\n  }\n`;\n","import { MdDelete } from 'react-icons/md';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  AvatarWrapper,\n  ListItem,\n  ContentWrapper,\n  ConfirmationText,\n  TextWrapper,\n  Hint,\n} from './ModalDelete.styled';\nimport Avatar from '../../images/delete.gif';\nimport { Btn } from 'components/Btn/Btn';\nimport { deleteContact } from '../../redux/contactsOperations';\n\nexport const ModalDeleteConfirmation = ({ id, closeModal, name }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      <ContentWrapper>\n        <AvatarWrapper>\n          <img src={Avatar} alt=\"avatar\" />\n        </AvatarWrapper>\n        <TextWrapper>\n          <ConfirmationText>\n            Are you sure you want to delete <span>{name}</span> from your\n            phonebook ?\n          </ConfirmationText>\n          <Hint>This action cannot be reversed</Hint>\n          <Btn\n            icon={MdDelete}\n            type=\"button\"\n            status=\"delete\"\n            text=\"Confirm delete\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n              closeModal();\n            }}\n          />\n        </TextWrapper>\n      </ContentWrapper>\n    </ListItem>\n  );\n};\n\nModalDeleteConfirmation.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport propTypes from 'prop-types';\n\nimport { ModalOverlay, ModalWindow } from './Modal.styled';\n\nimport { ModalForm } from './ModalForm';\nimport { ModalDeleteConfirmation } from './ModalDelete';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ id, closeModal, status, name }) => {\n  useEffect(() => {\n    const onEscPress = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPress);\n    };\n  }, [closeModal]);\n\n  const onBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <ModalOverlay onClick={onBackdropClick}>\n      <ModalWindow>\n        {status === 'edit' ? (\n          <ModalForm id={id} closeModal={closeModal} />\n        ) : (\n          <ModalDeleteConfirmation\n            id={id}\n            name={name}\n            closeModal={closeModal}\n          />\n        )}\n      </ModalWindow>\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  status: propTypes.string.isRequired,\n  closeModal: propTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { FaUserEdit, FaUserMinus } from 'react-icons/fa';\nimport {\n  ListItem,\n  ListItemData,\n  PhoneLink,\n  BtnsWrapper,\n  AvatarWrapper,\n  DataWrapper,\n} from './ContactItem.Styled';\nimport { Btn } from '../Btn/Btn';\nimport Avatar from '../../images/user-icons.gif';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [statusModal, setStatusModal] = useState('');\n\n  const toggleModal = status => {\n    setShowModal(!showModal);\n    setStatusModal(status);\n  };\n\n  return (\n    <ListItem>\n      <AvatarWrapper>\n        <img src={Avatar} alt={name} width=\"48\" />\n      </AvatarWrapper>\n      <ListItemData>\n        <DataWrapper>\n          Name:<span> {name} </span>\n        </DataWrapper>\n        <DataWrapper>\n          Phone:{' '}\n          <PhoneLink href={`tel:${number}`}>\n            <span>{number}</span>\n          </PhoneLink>\n        </DataWrapper>\n      </ListItemData>\n      <BtnsWrapper>\n        <Btn\n          icon={FaUserMinus}\n          type=\"button\"\n          status=\"delete\"\n          text=\"Delete contact\"\n          onClick={() => toggleModal('delete')}\n          />\n        <Btn\n          icon={FaUserEdit}\n          type=\"button\"\n          status=\"edit\"\n          text=\"Edit contact\"\n          onClick={() => toggleModal('edit')}\n        />\n      </BtnsWrapper>\n      {showModal && (\n        <Modal\n          id={id}\n          closeModal={toggleModal}\n          status={statusModal}\n          name={name}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { notifySettings } from '../../utils/notifySettings';\n\nimport { List } from './ContactList.styled';\nimport { ContactItem } from './ContactItem';\nimport { fetchContacts, deleteContact } from '../../redux/contactsOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect( () => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const filterContacts = () => {\n    const query = filter.toLocaleLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(query)\n    );\n\n    if (query && !filteredContacts.length) {\n      Notiflix.Notify.warning(\n        'No contacts matching your request',\n        notifySettings\n      );\n    }\n    return filteredContacts;\n  };\n\n  return (\n    <List>\n      {filterContacts().map(contact => {\n        return (\n          <ContactItem\n            id={contact.id}\n            key={contact.id}\n            name={contact.name}\n            number={contact.number}\n            onDeleteBtnClick={() => dispatch(deleteContact(contact.id))}\n          />\n        );\n      })}\n    </List>\n  );\n};","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  width: 50vw;\n  display: flex;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  justify-content: end;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  object-fit: fill;\n\n  @media screen and (min-width: 768px) {\n    max-width: 40vw;\n    margin-right: 15px;\n    min-width: 15vw;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 35vw;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/filterSlice';\nimport { DebounceInput } from 'react-debounce-input';\nimport styled from 'styled-components';\n\nimport { FilterWrapper } from './Filter.styled';\nimport { Label } from '../ContactForm/ContactForm.styled';\n\nconst FilterInput = styled(DebounceInput)`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact to search\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          debounceTimeout={500}\n        />\n      </Label>\n    </FilterWrapper>\n  );\n};","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding: 0 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-direction: column;\n  color: #010101;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 42px;\n    flex-direction: row-reverse;\n    justify-content: space-evenly;\n    align-items: flex-start;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 0 62px;\n  }\n`;\n\nexport const BlockWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SubHeader = styled.h2`\n  font-size: 16px;\n  text-transform: uppercase;\n  margin-top: 0;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 28px;\n  }\n`;\n","import ScrollToTop from 'react-scroll-up';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoadingStatus } from './../../redux/authSelectors';\nimport { Container, SubHeader, BlockWrapper } from './Contacts.styled';\nimport Arrow from '../../images/arrowUp.png';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contactsOperations';\n\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const loader = useSelector(selectLoadingStatus);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {loader && <Loader />}\n      <BlockWrapper>\n        <SubHeader>Add new contact</SubHeader>\n        <ContactForm />\n      </BlockWrapper>\n      <BlockWrapper>\n        <SubHeader>Your contacts</SubHeader>\n        <Filter />\n        <ContactList />\n      </BlockWrapper>\n      <ScrollToTop\n        showUnder={160}\n        style={{\n          bottom: 40,\n          right: 40,\n        }}\n      >\n        <img alt=\"arrow up\" width=\"35\" srcSet={Arrow} />\n      </ScrollToTop>\n    </Container>\n  );\n};\nexport default Contacts;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","InputItem","_ref","_ref$type","type","name","placeholder","pattern","title","onChange","value","_jsx","required","ContactForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","state","items","onInputChange","event","target","resetForm","_jsxs","onSubmit","preventDefault","includesName","find","toLocaleLowerCase","Notiflix","concat","notifySettings","addContact","children","Btn","icon","MdPersonAddAlt1","status","text","List","PhoneLink","BtnsWrapper","AvatarWrapper","_templateObject3","ListItem","_templateObject4","ListItemData","_templateObject5","DataWrapper","_templateObject6","ModalOverlay","ModalWindow","ContentWrapper","ListItemForm","InputWrapper","_templateObject7","_templateObject8","getContactsItems","ModalForm","id","closeModal","currentContact","contact","src","Avatar","alt","updateContact","FaUserCheck","TextWrapper","Hint","ConfirmationText","ModalDeleteConfirmation","MdDelete","onClick","deleteContact","modalRoot","document","querySelector","Modal","useEffect","onEscPress","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ContactItem","showModal","setShowModal","statusModal","setStatusModal","toggleModal","width","href","FaUserMinus","FaUserEdit","ContactList","fetchContacts","filter","query","filteredContacts","includes","length","filterContacts","map","onDeleteBtnClick","FilterWrapper","FilterInput","DebounceInput","Filter","e","filterContact","debounceTimeout","Container","BlockWrapper","SubHeader","Contacts","loader","selectLoadingStatus","Loader","ScrollToTop","showUnder","style","bottom","right","srcSet"],"sourceRoot":""}